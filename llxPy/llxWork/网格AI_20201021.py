# -*- coding: UTF-8 -*=
#深度超过5挡
Gears=6         #Gears档位
q=333.5             #买5价
w=337             #卖5价
#深度不足5挡
e=3              #最高档位（买）
r=4              #最高档位（卖）
X=335.12             #X最新成交价

#可用
A=1.5         #A可用交易币
B=1000000     #B可用计价币
C=A*X+B     #C可用余额折合
print("可用余额折合%s"%C)

#自定义参数
Maximum=350       #Maximum最高价
Minimum=320       #Minimum最低价
Stop=600          #Stop上涨止损价
Limit=100         #Limit下跌止损价
Num=10           #Num网格数
Max_num=(Maximum-Minimum)/(X*0.003)
print("最大网格数%s"%Max_num)
Amount=2        #Amount单网格交易数量

#AI参数
T=100           #T个交易币代码写死
R=10            #R7日前开盘价
r=1             #r最近7天最低价
u=2              #u7日匹配次数
x=(X-R)/R       #x最近7日涨跌幅(涨)
y=(X-R)/R       #x最近7日涨跌幅(跌)
x_MIN_price=X*(1-0.1-x)      #x_MAX_price挂单最低价(涨)
x_MAX_price=X*(1+0.1+0.5*x)  #x_MIN_price挂单最高价(涨)
x1_MIN_price=r*0.9           #x_MAX_price挂单最低价(涨)
y_MIN_price=X*(1-0.1-0.5*y)  #x_MAX_price挂单最低价(跌)
y_MAX_price=X*(1+0.1+y)      #x_MIN_price挂单最高价(跌)


#挂单最少资金量
D=2             #D最少挂单资金量(交易币)
G=D-A           #G市价换取交易币数量
H=G*1.001*w #H所花金额（计价币数量）取第5挡
h=G*1.001*r #H所花金额（计价币数量）取最高档

E=335             #E最少挂单资金量(计价币)
I=E-B           #H市价换取计价币数量
J=I*1.001*q#J所花金额（交易币数量）取第5挡
j=I*1.001*e#J所花金额（交易币数量）取最高档

#根据挂单最小资金量判断所需市价换取计价币的数量与金额

F=D*X+E         #F挂单最少资金量折合
print("挂单最少资金量折合%s"%F)

#投资额（AI）
Quota=1         #Quota投资额
SM=0.1            #SM运营后台配置的最小交易数量
SW=2            #SW单网格交易数量
SUM_price=3685     #SUM_price所有网格线上的价格之和
MIN_Quota=SUM_price*SM*1.001        #MIN_Quota最小投资额（取运营后台配置）
MAX_Quota=SUM_price*SW*1.001        #MAX_Quota最大投资额（取单网格交易数量）

#网格数
MAX_num1=(x_MAX_price-x_MIN_price)/(X*0.003)       #涨
MAX_num2=(x_MAX_price-x1_MIN_price)/(X*0.003)      #涨x>=90%
MAX_num3=(y_MAX_price-y_MIN_price)/(X*0.003)       #跌
#单网格交易数量
U1=T/MAX_num1
U2=T/MAX_num2
U3=T/MAX_num3
#单网格利润
MAX1_num1=(x_MAX_price-x_MIN_price)/MAX_num1*U1       #涨
MAX2_num2=(x_MAX_price-x1_MIN_price)/MAX_num2*U2      #涨x>=90%
MAX3_num3=(y_MAX_price-y_MIN_price)/MAX_num3*U3       #跌
#单网格利润率
QW1=(x_MAX_price-x_MIN_price)/MAX_num1/x_MAX_price#(高)
QW2=(x_MAX_price-x_MIN_price)/MAX_num1/x_MIN_price#（低）
QW3=(x_MAX_price-x1_MIN_price)/MAX_num2/x1_MIN_price#（低）
QW4=(y_MAX_price-y_MIN_price)/MAX_num3*U3/y_MAX_price#(高)
QW5=(y_MAX_price-y_MIN_price)/MAX_num3*U3/y_MIN_price#（低）
#已赚取收益
zhuan1=u*MAX1_num1
zhuan2=u*MAX2_num2
zhuan3=u*MAX3_num3

Ratio=MIN_Quota/C         #ratio滑块比例(AI推荐最小交易数量)
ratio=0
if ratio<Ratio:
    print("投资额显示:最低投入%s"%MIN_Quota)
#AI前台页面显示数据
if X-R>0 and x>=0.9 and C>F>MIN_Quota:
    print(MIN_Quota)
    print("AI价格区间[%s,%s]"%(x1_MIN_price,x_MAX_price),"AI网格数%s"%MAX_num2,"AI单网格交易数量%s"%U2,"AI单网格利润率[%s,%s]"%(QW1,QW3),"AI投资额%s"%MIN_Quota,"可用余额折合%s"%C,"已赚取收益%s"%zhuan2)
    print('$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$1')
if X-R>0 and 0<x<0.9 and C>F>MIN_Quota:
    print("AI价格区间[%s,%s]"%(x_MIN_price,x_MAX_price),"AI网格数%s"%MAX_num1,"AI单网格交易数量%s"%U2,"AI单网格利润率[%s,%s]"%(QW1,QW2),"AI投资额%s"%MIN_Quota,"可用余额折合%s"%C,"已赚取收益%s"%zhuan1)
    print('$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$2')
if X-R<0 and C>F>MIN_Quota:
    print("AI价格区间[%s,%s]"%(y_MIN_price,y_MAX_price),"AI网格数%s"%MAX_num3,"AI单网格交易数量%s"%U2,"AI单网格利润率[%s,%s]"%(QW4,QW5),"AI投资额%s"%MIN_Quota,"可用余额折合%s"%C,"已赚取收益%s"%zhuan3)
    print('$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$3')


#投资额(自定义)
m=5#m卖出单数（投资额）
M=m*Amount-A#M换取交易币数量
O=M*1.001*w#所花金额档位取第5挡
o=M*1.001*r#所花金额档位取最高档

n=1965#n买入价格之和（投资额）
N=n*Amount-B#N换取计价币数量
P=N*1.001*q#所花金额档位取第5挡
p=N*1.001*e#所花金额档位取最高档

if C<F*1.001 and B<E:
    print("资金不足,无法运行策略")
    print("***************************************资金不足**************************************************1")
if A<D and B>=E and C<F*1.001:
    print("资金不足,无法运行策略")
    print("****************************************资金不足*************************************************2")
if B<E and A>=D and C<F*1.001:
    print("资金不足,无法运行策略")
    print("****************************************资金不足*************************************************3")
#挂单最少资金量<可用余额折合<投资额
#市价换取计价币
if F*1.001<C<MAX_Quota*1.001 and A>D and B>E:
    print("直接运行策略")
if C<F*1.001:
    print("不满足，提示资金不足")
    print("*********************************************自定义最少资金量********************************************4")
if F*1.001<C<MAX_Quota*1.001 and A>D and B<E and Gears<5:
    print("换计价币数量%s（计价币）"%G,"金额%s(计价币)"%h,"最高档")
    print("换币成功运行策略")
    print("*********************************************自定义最少资金量********************************************5")
if F*1.001<C<MAX_Quota*1.001 and A>D and B<E and Gears>=5:
    print("换计价币数量%s(计价币)"%G,"金额%s(计价币)"%H,"第5挡")
    print("换币成功运行策略")
    print("*******************************************自定义最少资金量**********************************************6")
#市价换取交易币
if F*1.001<C<MAX_Quota*1.001 and A<D and B>E and Gears<5:
    print("换计价币数量%s（计价币）"%I,"金额%s(交易币)"%j,"最高档")
    print("换币成功运行策略")
    print("*********************************************自定义最少资金量********************************************7")
if F*1.001<C<MAX_Quota*1.001 and A<D and B>E and Gears>=5:
    print("换计价币数量%s(计价币)"%I,"金额%s(交易币)"%J,"第5挡")
    print("换币成功运行策略")
    print('asd%s'%I,'as%s'%J)
    print("*******************************************自定义最少资金量**********************************************8")


#可用余额折合>=投资额（自定义）
if C>=MAX_Quota*1.001 and A>M and B>N and C>=F*1.001:
    print("直接运行策略")
    print("************************************自定义投资额*****************************************************12")
if C>=MAX_Quota*1.001 and A<M and B>N and C>=F*1.001:
    print("执行市价换交易币操作")
    print("**************************************自定义投资额***************************************************13")
#市价换取交易币
if C>=MAX_Quota*1.001 and A<M and B>N and Gears<5 and C>=F*1.001:
    print("换计价币数量%s（计价币）"%M,"金额%s(交易币)"%o,"最高档，自定义换币取单网格交易数量")
    print("换币成功运行策略")
    print("*************************************自定义投资额换交易币取第5挡****************************************************14")
if C>=MAX_Quota*1.001 and A<M and B>N and Gears>=5 and C>=F*1.001:
    print("换计价币数量%s(计价币)"%M,"金额%s(交易币)"%O,"第5挡，自定义换币取单网格交易数量")
    print("换币成功运行策略")
    print("***************************************自定义投资额交易币取最高档**************************************************15")
#市价换取计价币
if C>=MAX_Quota*1.001 and A>M and B<N and C>=F*1.001:
    print("执行市价换计价币操作")
    print("**************************************自定义投资额计价币***************************************************16")
elif C>=MAX_Quota*1.001 and A>M and B<N and Gears<5 and C>=F*1.001:
    print("换交易币数量%s（交易币）"%N,"金额%s(计价币)"%p,"最高档，自定义换币取单网格交易数量")
    print("换币成功运行策略")
    print("*****************************************自定义投资额计价币取最高档************************************************17")
elif C>=MAX_Quota*1.001 and A>M and B<N and Gears>=5 and C>=F*1.001:
    print("换交易币数量%s(交易币)"%N,"金额(计价币)%s"%P,"第5挡，自定义换币取单网格交易数量")
    print("换币成功运行策略")
    print("*****************************************自定义投资额计价币取第5档************************************************18")


##可用余额折合>=投资额（AI）
'''
if C>=MAX_Quota:
    print("")
'''
if C>=MAX_Quota*1.001 and A>M and B>N:
    print("直接运行策略")
    print("************************************AI*****************************************************19")
else:
    print("***********************************AI资金不足************************************************20")
if C>=MAX_Quota*1.001 and A<M and B>N:
    print("执行市价换交易币操作")
    print("**************************************AI交易币***************************************************21")
if C>=MAX_Quota*1.001 and A>M and B<N:
    print("执行市价换计价币操作")
    print("**************************************AI计价币***************************************************22")
#市价换取交易币
if C>=MAX_Quota*1.001 and A<M and B>N and Gears<5:
    print("换计价币数量%s（计价币）"%M,"金额%s(交易币)"%o,"最高档，自定义换币取单网格交易数量")
    print("换币成功运行策略")
    print("*************************************AI交易币取最高档****************************************************23")
if C>=MAX_Quota*1.001 and A<M and B>N and Gears>=5:
    print("换计价币数量%s(计价币)"%M,"金额%s(交易币)"%O,"第5挡，自定义换币取单网格交易数量")
    print("换币成功运行策略")
    print("***************************************AI交易币取第5挡**************************************************24")
#市价换取计价币
elif C>=MAX_Quota*1.001 and A>M and B<N and Gears<5:
    print("换交易币数量%s（交易币）"%N,"金额%s(计价币)"%p,"最高档，自定义换币取单网格交易数量")
    print("换币成功运行策略")
    print("*****************************************AI计价币取最高档************************************************25")
elif C>=MAX_Quota*1.001 and A>M and B<N and Gears>=5:
    print("换交易币数量%s(交易币)"%N,"金额(计价币)%s"%P,"第5挡，自定义换币取单网格交易数量")
    print("换币成功运行策略")
    print("*****************************************AI计价币取第5档************************************************26")